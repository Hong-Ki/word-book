{"version":3,"sources":["style/word.module.scss","style/layout.module.scss","style/modal.module.scss","style/button.module.scss","components/FileForm.js","modules/modal.js","modules/words.js","modules/base.js","modules/test.js","components/Button.js","class/Word.js","containers/FooterContainer.js","components/Input.js","containers/HeaderContainer.js","containers/MenuContainer.js","components/Word.js","components/Means.js","components/Etc.js","components/WordBox.js","components/WordBoxList.js","containers/WordBoxListContainer.js","components/Mean.js","components/MeanList.js","components/Modal.js","components/Result.js","containers/WordModalContainer.js","App.js","modules/index.js","index.js"],"names":["module","exports","container","show","overflowText","text-move","check","word","mean","etc","first","last","open","close","wordList","fileForm","text","tab1","tab2","tab3","header","wrapper","menuBase","wrapper-open","wrapper-close","menuBar","menu","buttons","body","footer","title","box","contents","meansList","button","submit","add","cancel","result","total","correct","open-result","open-wrapper","pulse","pulse-infinite","rotate","buttonRotate","wordContainerButton","fullButton","inputWrapper","innerButton-right","cx","classNames","bind","styles","FileForm","handleClick","e","target","tagName","parentElement","i","childElementCount","el","children","tab","className","charAt","indexOf","j","Number","concat","textContent","textarea","document","createElement","value","appendChild","select","execCommand","removeChild","window","alert","mode","this","props","react_default","a","onClick","Component","createAction","hide","change","toggleMeanMode","addMean","removeMean","changeMean","showResult","hideResult","initialState","Map","visible","resultVisible","id","means","List","wrongCounter","handleActions","_handleActions","Object","defineProperty","state","action","get","payload","set","getIn","input","setIn","index","current","push","delete","_action$payload","mergeIn","isEditMode","actoin","create","update","remove","loadWords","isComplete","words_handleActions","findIndex","confirm","_ret","toJS","editMeans","_loop","key","idx","replace","splice","v","isEqual","toImmutable","filter","fromJS","search","setMode","switchMenu","keyword","isActiveMenu","base_handleActions","initialize","words","wrong","test_handleActions","map","Button","_ref","rest","objectWithoutProperties","defaultWord","completeCount","Word","_this","classCallCheck","toString","fromModal","toModal","shortid","generate","isEditMod","toTest","isImmu","isImmutable","FooterContainer","handleShow","ModalActions","onchange","checkFile","accept","type","click","handleRemove","WordsActions","idList","querySelectorAll","element","isEmpty","file","files","fr","FileReader","onload","JSON","parse","_unused","readAsText","handleSubmit","_this$props","TestActions","BaseActions","components_Button","index_esm","connect","base","dispatch","bindActionCreators","modalActions","wordsActions","baseActions","testActions","InputWithButton","React","forwardRef","ref","placeholder","defaultValue","onKeyDown","onChange","onBlur","onFocus","readOnly","readonly","disabled","buttonClassName","HeaderContainer","handleChange","handleFocus","blur","fa_index_esm","MenuContainer","handleSwitchMenu","handleSelectMenu","animetion","possibleConstructorReturn","getPrototypeOf","call","createRef","prevProps","prevState","snapshot","offsetWidth","Means","onEdit","size","wordStyle","Etc","handleSound","stopPropagation","msg","SpeechSynthesisUtterance","lang","volume","rate","pitch","speechSynthesis","speak","io_index_esm","WordBox","handleCheck","handleEdit","handleBlur","_this$props2","_this$props3","onRemove","htmlFor","fi_index_esm","components_Word","components_Means","components_Etc","WordBoxList","isAtive","components_WordBox","WordBoxListContainer","answer","testWords","answers","split","isCorrect","length","localStorage","setItem","stringify","_this$props4","components_WordBoxList","test","Mean","handleMode","toggleMode","focus","MeanList","onChangeMean","trim","handleKeyPress","keyCode","onRemoveMean","closest","getAttribute","nextProps","nextState","meanList","components_Mean","Modal","onAddMean","handleKeyDown","preventDefault","modal","onAdd","onCancel","modeString","required","components_MeanList","Result","WordModalContainer","handleMean","item","meanObj","otherMeans","handleWord","_this$props5","validate","_this$props6","handleCancel","_this$props7","components_Modal","components_Result","layout","App","getItem","containers_HeaderContainer","containers_WordBoxListContainer","components_FileForm","containers_FooterContainer","containers_MenuContainer","containers_WordModalContainer","combineReducers","store","createStore","reducers","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App","getElementById"],"mappings":"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","file":"static/js/main.9f4ec8db.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"word_container__14hbr\",\"show\":\"word_show___CGe3\",\"overflowText\":\"word_overflowText__3NjVX\",\"text-move\":\"word_text-move__2Eupz\",\"check\":\"word_check__2I7jF\",\"word\":\"word_word__1oIdx\",\"mean\":\"word_mean__hZYdF\",\"etc\":\"word_etc__1aNuR\",\"first\":\"word_first__1Obmn\",\"last\":\"word_last__2Fzh1\",\"open\":\"word_open__1_ucK\",\"close\":\"word_close__3pAgf\",\"wordList\":\"word_wordList__BHlMN\",\"fileForm\":\"word_fileForm__-aloW\",\"text\":\"word_text__iUi0X\",\"tab1\":\"word_tab1__1auSw\",\"tab2\":\"word_tab2__3c16g\",\"tab3\":\"word_tab3__2P2JK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"layout_header__1sSBx\",\"wrapper\":\"layout_wrapper__Gh19r\",\"menuBase\":\"layout_menuBase__39QYI\",\"wrapper-open\":\"layout_wrapper-open__3rUuJ\",\"wrapper-close\":\"layout_wrapper-close__1LjhR\",\"open\":\"layout_open__16RXJ\",\"close\":\"layout_close__1LmDi\",\"menuBar\":\"layout_menuBar__o9d2q\",\"menu\":\"layout_menu__2CeNZ\",\"buttons\":\"layout_buttons__1Ber4\",\"body\":\"layout_body__3pUNW\",\"footer\":\"layout_footer__1ZPi4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"modal_wrapper__MFLJt\",\"title\":\"modal_title__2czFJ\",\"box\":\"modal_box__45WXb\",\"contents\":\"modal_contents__2KNUX\",\"meansList\":\"modal_meansList__C5E-v\",\"mean\":\"modal_mean__EMkld\",\"button\":\"modal_button__Z3JfN\",\"text\":\"modal_text__1Vovw\",\"submit\":\"modal_submit__1yWPU\",\"add\":\"modal_add__2ltqx\",\"cancel\":\"modal_cancel__1yLS0\",\"result\":\"modal_result__1pncu\",\"total\":\"modal_total__3LZ0M\",\"correct\":\"modal_correct__6TIqU\",\"open\":\"modal_open__3aUR3\",\"open-result\":\"modal_open-result__2-Tt_\",\"close\":\"modal_close__t50U_\",\"open-wrapper\":\"modal_open-wrapper__1GVgk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pulse\":\"button_pulse__1HtPY\",\"pulse-infinite\":\"button_pulse-infinite__1nNKW\",\"rotate\":\"button_rotate__17EPz\",\"buttonRotate\":\"button_buttonRotate__2E7TC\",\"wordContainerButton\":\"button_wordContainerButton__2uaGW\",\"button\":\"button_button__1jN1g\",\"fullButton\":\"button_fullButton__D0KYg\",\"inputWrapper\":\"button_inputWrapper__2bo6T\",\"innerButton-right\":\"button_innerButton-right__37eJd\"};","import React, { Component } from 'react';\r\nimport classNames from 'classnames/bind';\r\n\r\nimport * as styles from '../style/word.module.scss';\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nclass FileForm extends Component {\r\n  handleClick = e => {\r\n    const target =\r\n      e.target.tagName === 'DIV' ? e.target : e.target.parentElement;\r\n    let text = '';\r\n    for (let i = 0; i < target.childElementCount; i++) {\r\n      const el = target.children[i];\r\n      const tab = el.className.charAt(el.className.indexOf('tab') + 3);\r\n\r\n      for (let j = 0; j < Number(tab); j++) {\r\n        text += '\\t';\r\n      }\r\n      text += `${el.textContent  }\\n`;\r\n    }\r\n\r\n    const textarea = document.createElement('textarea');\r\n    textarea.value = text;\r\n    document.body.appendChild(textarea);\r\n    textarea.select();\r\n    document.execCommand('copy');\r\n    document.body.removeChild(textarea);\r\n\r\n    window.alert('copy complete this text!');\r\n  };\r\n\r\n  render() {\r\n    const { mode } = this.props;\r\n    const { handleClick } = this;\r\n\r\n    return (\r\n      <div\r\n        className={\r\n          mode === 'FILE FORM'\r\n            ? cx(['fileForm', 'open'])\r\n            : cx(['fileForm', 'close'])\r\n        }\r\n      >\r\n        <h1>File is must be JSON. (*.json)</h1>\r\n        <div className={cx('text')} onClick={handleClick}>\r\n          <p>[</p>\r\n          <p className={cx('tab1')}>{'{'}</p>\r\n          <p className={cx('tab2')}>\"word\":\"enter your word to here\",</p>\r\n          <p className={cx('tab2')}>\"means\": [</p>\r\n          <p className={cx('tab3')}>\"enter your mean to here\", </p>\r\n          <p className={cx('tab3')}>\r\n            \"if you need more means. concat like this\",\r\n          </p>\r\n          <p className={cx('tab3')}>...</p>\r\n          <p className={cx('tab2')}>]</p>\r\n          <p className={cx('tab1')}>{'}'}</p>\r\n          <p className={cx('tab1')}>{',{'}</p>\r\n          <p className={cx('tab2')}>\r\n            \"word\":\"if you need more words. concat like this\",\r\n          </p>\r\n          <p className={cx('tab2')}>\"means\": [</p>\r\n          <p className={cx('tab3')}>\"enter your means to here\", </p>\r\n          <p className={cx('tab3')}>...</p>\r\n          <p className={cx('tab2')}>]</p>\r\n          <p className={cx('tab1')}>{'}.....'}</p>\r\n          <p>]</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FileForm;\r\n","import {Map,List} from  'immutable';\r\nimport {createAction, handleActions} from  'redux-actions';\r\n\r\nconst SHOW = 'modal/SHOW';\r\nconst HIDE = 'modal/HIDE';\r\nconst CHANGE = 'modal/CHANGE';\r\nconst TOGGLE_MEAN_MODE = 'modal/TOOGLE_MEAN_MODE';\r\nconst ADD_MEAN = 'modal/ADD_MEAN';\r\nconst REMOVE_MEAN = 'modal/REMOVE_MEAN';\r\nconst CHANGE_MEAN = 'modal/CHANGE_MEAN';\r\n\r\nconst SHOW_RESULT = 'modal/result/SHOW';\r\nconst HIDE_RESULT = 'modal/result/HIDE';\r\n\r\nexport const show = createAction(SHOW);\r\nexport const hide = createAction(HIDE);\r\nexport const change = createAction(CHANGE); // {word, mean}\r\nexport const toggleMeanMode = createAction(TOGGLE_MEAN_MODE); // index;\r\nexport const addMean = createAction(ADD_MEAN); // Map{ mean:string, id:string, isEditMode:boolean }\r\nexport const removeMean = createAction(REMOVE_MEAN); // index\r\nexport const changeMean = createAction(CHANGE_MEAN); // input{ index, mean}\r\n\r\nexport const showResult = createAction(SHOW_RESULT);\r\nexport const hideResult = createAction(HIDE_RESULT);\r\n\r\nconst initialState = Map ( {\r\n    visible:false,\r\n    resultVisible:false,\r\n    mode:'',\r\n    word: Map ( {\r\n        id : null,\r\n        word : '',\r\n        means: List([]), // means : [{id:string, mean:string, isEidtMode:boolean}]\r\n        wrongCounter : -1\r\n    })\r\n});\r\n\r\nexport default handleActions ({\r\n    [SHOW]: (state, action) => {\r\n        let word = initialState.get('word'), mode = 'add';\r\n        if ( typeof (action.payload) !== 'undefined') {\r\n            word = action.payload;\r\n            mode = 'change';\r\n        }\r\n\r\n        return state.set('visible',true).set('word', word).set('mode',mode);\r\n    },\r\n    [HIDE]: (state, action) => {\r\n        return state.set('visible', false).set('word', Map ( {\r\n            id : '',\r\n            word : '',\r\n            means: List([]), // means : [{mean:string, isEidtMode:boolean}]\r\n            wrongCounter : -1\r\n        })); \r\n    },\r\n    [CHANGE]: (state, action) => {\r\n        const word = state.getIn(['word']);\r\n        const input = action.payload;\r\n\r\n        if ( word.get('word') !== input.word ) {\r\n            return state.setIn(['word', 'word'], input.word ); \r\n        }\r\n\r\n    },\r\n    [TOGGLE_MEAN_MODE] : (state, action) => {\r\n        const index = action.payload;\r\n        const current = state.getIn(['word','means', index, 'isEditMode']);\r\n\r\n        return state.setIn(['word', 'means', index, 'isEditMode'], !current );\r\n    },\r\n    [ADD_MEAN]: (state, action) => {\r\n        const means = state.getIn(['word', 'means']);\r\n\r\n        return state.setIn(['word','means'], means.push(action.payload));\r\n    },\r\n    [REMOVE_MEAN]: (state, action) => {\r\n        const means = state.getIn(['word', 'means']);\r\n        const index = action.payload;\r\n    \r\n        return state.setIn(['word','means'], means.delete(index));\r\n    },\r\n    [CHANGE_MEAN]: (state, action) => {\r\n        const {index, mean} = action.payload;\r\n        \r\n        return state.mergeIn(['word', 'means', index], Map ({isEditMode:false, mean:mean}) );\r\n\r\n    },\r\n    [SHOW_RESULT]: (state,actoin) => {\r\n        return state.set('resultVisible',true);\r\n    },\r\n    [HIDE_RESULT]: (state,actoin) => {\r\n        return state.set('resultVisible',false);\r\n    },\r\n}, initialState);","import { Map, List, fromJS } from 'immutable';\r\nimport { createAction, handleActions } from 'redux-actions';\r\n\r\nconst CREATE = 'word/CREATE';\r\nconst UPDATE = 'word/UPDATE';\r\nconst REMOVE = 'word/REMOVE';\r\nconst LOAD_WORDS = 'word/LOAD_WORDS';\r\n\r\nexport const create = createAction(CREATE); // Map{id, word, List[means], isComplete, wrongCount }\r\nexport const update = createAction(UPDATE); // id, word{ word, List[means], isComplete, wrongCount }\r\nexport const remove = createAction(REMOVE); // List[id]\r\nexport const loadWords = createAction(LOAD_WORDS);\r\n\r\nconst initialState = List([\r\n  Map({\r\n    means: List(['이곳을 클릭하면 수정이 가능해요!']),\r\n    word: '단어가 없네요!',\r\n    id: 'Default',\r\n    isComplete: false,\r\n  }),\r\n]);\r\n\r\nexport default handleActions(\r\n  {\r\n    [CREATE]: (state, action) => {\r\n      const index = state.findIndex(\r\n        word => word.get('word') === action.payload.get('word'),\r\n      );\r\n      if (index < 0) {\r\n        return state.push(action.payload);\r\n      }\r\n\r\n      if (\r\n        window.confirm(`${state.getIn([index, 'word'])} : Do you want Merge?`)\r\n      ) {\r\n        const means = state.getIn([index, 'means']).toJS();\r\n        const editMeans = action.payload.get('means').toJS();\r\n\r\n        for (const key in means) {\r\n          const idx = editMeans.findIndex(\r\n            mean => mean.replace(/ /g, '') === means[key].replace(/ /g, ''),\r\n          );\r\n          if (idx > -1) {\r\n            means[key] = editMeans[idx];\r\n            editMeans.splice(idx, 1);\r\n          }\r\n        }\r\n\r\n        return state.setIn([index, 'means'], List(means.concat(editMeans)));\r\n      }\r\n\r\n      return state;\r\n    },\r\n    [UPDATE]: (state, action) => {\r\n      const index = state.findIndex(\r\n        word => word.get('id') === action.payload.id,\r\n      );\r\n      const isExist =\r\n        state\r\n          .delete(index)\r\n          .findIndex(word => word.get('word') === action.payload.word) > -1;\r\n\r\n      if (isExist) {\r\n        alert('it is dupplicate');\r\n        return state;\r\n      }\r\n\r\n      if (!action.payload.isEqual(state.get(index).toJS())) {\r\n        const word = action.payload.toImmutable();\r\n        return state.mergeIn([index], word);\r\n      }\r\n    },\r\n    [REMOVE]: (state, action) => {\r\n      const result = state.filter(\r\n        word => action.payload.findIndex(id => word.get('id') === id) < 0,\r\n      );\r\n\r\n      return result;\r\n    },\r\n    [LOAD_WORDS]: (state, action) => {\r\n      return fromJS(action.payload);\r\n    },\r\n  },\r\n  initialState,\r\n);\r\n","import {Map} from 'immutable';\r\nimport {createAction, handleActions} from 'redux-actions';\r\n\r\nconst SEARCH = 'base/SEARCH';\r\nconst SET_MODE = 'base/SET_MODE';\r\nconst SWITCH_MENU = 'base/SWITCH_MENU';\r\n\r\nexport const search = createAction(SEARCH); //keyword\r\nexport const setMode = createAction(SET_MODE); //mode\r\nexport const switchMenu = createAction(SWITCH_MENU); \r\n\r\nconst initialState = Map({\r\n    keyword:'',\r\n    mode:'WORDS',\r\n    isActiveMenu:false\r\n});\r\n\r\nexport default handleActions ({\r\n    [SEARCH] : (state, action) => \r\n        state.set('keyword', action.payload)\r\n    ,\r\n    [SET_MODE] : (state, action) => \r\n        state.set('mode', action.payload)\r\n    ,\r\n    [SWITCH_MENU] : (state, action) => \r\n        state.set('isActiveMenu', !state.get('isActiveMenu') )\r\n}, initialState);","import {Map, List} from 'immutable';\r\nimport {createAction, handleActions} from 'redux-actions';\r\n\r\nconst CHANGE = 'test/CHANGE';\r\nconst INITIALIZE = 'test/INITIALIZE';\r\nconst SUBMIT = 'test/SUBMIT';\r\n\r\nexport const change = createAction(CHANGE); // answer\r\nexport const initialize = createAction(INITIALIZE); // answer\r\nexport const submit = createAction(SUBMIT); // answer\r\n\r\nconst initialState = Map ({\r\n    words:List([]),\r\n    wrong:0,\r\n    correct:0\r\n})\r\n\r\n/**\r\n * words : List [ Map( {\r\n *                  word:string, \r\n *                  means:List([string]),\r\n *                  answers:List([string]),\r\n *                  isCorrect:boolean,\r\n *                  id:string,\r\n *                  isComplete:boolean,\r\n *                  compoleteCount:number\r\n * }) ...]\r\n */\r\n\r\nexport default handleActions({\r\n    [CHANGE]: (state, action) => {\r\n\r\n        return state.mergeIn( ['words', action.payload.index ], action.payload );\r\n    },\r\n    [INITIALIZE]: (state, action) => {\r\n        return state.set('words', action.payload);\r\n    },\r\n    [SUBMIT] : (state, action) => {\r\n        let wrong=0, correct = 0;\r\n        state.get('words').map( word => word.get('isCorrect') ? correct++ : wrong++ );\r\n\r\n        return state.set('wrong', wrong).set('correct',correct);\r\n    } \r\n}, initialState);","import React from 'react';\r\nimport classNames from 'classnames/bind';\r\n\r\nimport * as styles from '../style/button.module.scss';\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nconst Button = ({ children, ...rest }) => {\r\n  return (\r\n    <div className={cx(rest.className)} onClick={rest.onClick}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import { Map, List, fromJS, isImmutable } from 'immutable';\r\nimport shortid from 'shortid';\r\n\r\nconst defaultWord = {\r\n  means: [],\r\n  word: '',\r\n  id: '',\r\n  isComplete: false,\r\n  completeCount: -1,\r\n};\r\n\r\nclass Word {\r\n  constructor(word) {\r\n    const isImmu = isImmutable(word);\r\n\r\n    for (const key in defaultWord) {\r\n      this[key] = (isImmu ? word.get(key) : word[key]) || defaultWord[key];\r\n    }\r\n\r\n    if (this.id === '') {\r\n      this.id = shortid.generate();\r\n    }\r\n  }\r\n\r\n  isEqual = word => {\r\n    let isEqual = true;\r\n    for (const key in defaultWord) {\r\n      isEqual = isEqual && this[key].toString() === word[key].toString();\r\n      if (!isEqual) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    return isEqual;\r\n  };\r\n\r\n  fromModal = () => {\r\n    this.means = this.means.map(mean => mean.get('mean'));\r\n\r\n    return this;\r\n  };\r\n\r\n  toModal = () => {\r\n    // withImmutable\r\n    const word = fromJS(Map(this)).set(\r\n      'means',\r\n      List(\r\n        this.means.map(mean =>\r\n          Map({ id: shortid.generate(), mean, isEditMod: false }),\r\n        ),\r\n      ),\r\n    );\r\n    return word;\r\n  };\r\n\r\n  toImmutable = () => {\r\n    return Map({\r\n      means: List(this.means),\r\n      word: this.word,\r\n      id: this.id,\r\n      isComplete: this.isComplete,\r\n      completeCount: this.completeCount,\r\n    });\r\n  };\r\n\r\n  toTest = () => {\r\n    return this.toImmutable()\r\n      .set('isCorrect', false)\r\n      .set('answers', List([]))\r\n      .set('means', List(this.means).map(mean => mean.replace(/ /g, '')));\r\n  };\r\n}\r\n\r\nexport default Word;\r\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport classNames from 'classnames/bind';\nimport { MdAdd, MdRemove } from 'react-icons/md';\nimport { List } from 'immutable';\n\nimport * as modalActions from '../modules/modal';\nimport * as wordsActions from '../modules/words';\nimport * as baseActions from '../modules/base';\nimport * as testActions from '../modules/test';\n\nimport * as styles from '../style/layout.module.scss';\n\nimport Button from '../components/Button';\n\nimport Word from '../class/Word';\n\nconst cx = classNames.bind(styles);\n\nclass FooterContainer extends Component {\n  handleShow = () => {\n    const { ModalActions } = this.props;\n    const input = document.createElement('input');\n    input.onchange = this.checkFile;\n    input.accept = 'application/json';\n    input.type = 'file';\n\n    if (window.confirm('Do you want add word from JSON file?')) {\n      input.click();\n      return;\n    }\n\n    ModalActions.show();\n  };\n\n  handleRemove = () => {\n    const { WordsActions } = this.props;\n    const idList = List(\n      document.querySelectorAll('input[type=\"checkbox\"]:checked'),\n    ).map(element => element.id);\n\n    if (idList.isEmpty()) {\n      window.alert('Please select more than one!');\n      return;\n    }\n\n    if (window.confirm('do you want remove?')) {\n      WordsActions.remove(idList);\n    }\n  };\n\n  checkFile = e => {\n    const file = e.target.files[0];\n    const fr = new FileReader();\n\n    if (e.target.value === '') {\n      return;\n    }\n\n    if (file.type !== e.target.accept) {\n      window.alert('It is wrong file type!');\n      e.target.value = '';\n      return;\n    }\n\n    fr.onload = e => {\n      const contents = e.target.result;\n      const { WordsActions } = this.props;\n      try {\n        const words = JSON.parse(contents);\n        words.map(word => WordsActions.create(new Word(word).toImmutable()));\n      } catch {\n        window.alert(\n          'Error of parsing. please check your file this site : https://jsonlint.com',\n        );\n        return false;\n      }\n    };\n\n    fr.readAsText(file, 'UTF-8');\n  };\n\n  handleSubmit = () => {\n    const { TestActions, ModalActions, BaseActions } = this.props;\n\n    TestActions.submit();\n    BaseActions.setMode('WORDS');\n    ModalActions.showResult();\n  };\n\n  render() {\n    const { handleShow, handleRemove, handleSubmit } = this;\n    const { mode } = this.props;\n\n    const buttons =\n      mode !== 'TEST' ? (\n        <div className={cx('footer')}>\n          <Button onClick={handleShow}>\n            <MdAdd />\n          </Button>\n          <Button onClick={handleRemove}>\n            <MdRemove />\n          </Button>\n        </div>\n      ) : (\n        <div className={cx('footer')}>\n          <Button onClick={handleSubmit}>SUBMIT</Button>\n        </div>\n      );\n\n    return <div>{buttons}</div>;\n  }\n}\n\nexport default connect(\n  state => ({\n    mode: state.base.get('mode'),\n  }),\n  dispatch => ({\n    ModalActions: bindActionCreators(modalActions, dispatch),\n    WordsActions: bindActionCreators(wordsActions, dispatch),\n    BaseActions: bindActionCreators(baseActions, dispatch),\n    TestActions: bindActionCreators(testActions, dispatch),\n  }),\n)(FooterContainer);\n","import React from 'react';\r\nimport classNames from 'classnames/bind';\r\n\r\nimport Button from './Button';\r\n\r\nimport * as button from '../style/button.module.scss';\r\n\r\nconst cx = classNames.bind(button);\r\n\r\nconst Input = ({children, ...rest}) => {\r\n    return (\r\n        <input\r\n            placeholder={rest.placeholder}\r\n            defaultValue={rest.defaultValue}\r\n            onChange={rest.onChange}\r\n            onBlur={rest.onBlur}\r\n        />\r\n    );\r\n}\r\n        \r\nconst InputWithButton = React.forwardRef( (props,ref) => (\r\n    <div className={cx('inputWrapper')}>\r\n            <input\r\n                ref={ref}\r\n                placeholder={props.placeholder}\r\n                defaultValue={props.defaultValue}\r\n                onKeyDown={props.onKeyDown}\r\n                onChange={props.onChange}\r\n                onBlur={props.onBlur}\r\n                onFocus={props.onFocus}\r\n                readOnly={props.readonly}\r\n                disabled={props.disabled}\r\n            />\r\n            <Button\r\n                className={cx(props.buttonClassName)}\r\n                placeholder={props.placeholder}\r\n                onClick={props.onClick}\r\n            >\r\n                {props.children}\r\n            </Button>\r\n        </div>\r\n));\r\n\r\n\r\nexport {Input, InputWithButton};","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux'\r\nimport {bindActionCreators} from 'redux';\r\nimport classNames from 'classnames/bind';\r\n\r\nimport {InputWithButton} from '../components/Input';\r\nimport {FaSearch,FaBars} from 'react-icons/fa'\r\n\r\nimport * as baseActions from '../modules/base'\r\nimport * as styles from '../style/layout.module.scss'\r\n\r\nimport Button from '../components/Button';\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nclass HeaderContainer extends Component {\r\n    \r\n    handleChange = (e) => {\r\n        const {BaseActions} =this.props;\r\n        const {value} = e.target;\r\n        \r\n        BaseActions.search(value);\r\n    }\r\n    \r\n    handleClick = (e) => {\r\n        const {BaseActions} =this.props;\r\n        BaseActions.switchMenu();\r\n    }\r\n\r\n    handleFocus = (e) => {\r\n        const {mode} = this.props;\r\n\r\n        if (mode === 'TEST') {\r\n            window.alert(\"You can't use this!!\");\r\n            e.target.disabled=true;\r\n            e.target.blur();\r\n        }\r\n    }\r\n\r\n    render () {\r\n        const {handleChange, handleClick, handleFocus} = this;\r\n        const {mode} = this.props;\r\n\r\n        return (\r\n            <div className={cx('header')}> \r\n                <div>\r\n                    <Button\r\n                        onClick={handleClick}\r\n                        className={'rotate'}\r\n                    >\r\n                        <FaBars/>\r\n                    </Button>\r\n                </div>\r\n                <div>\r\n                    Word Book \r\n                </div>\r\n                <div>\r\n                    <InputWithButton\r\n                        buttonClassName={'innerButton-right'}\r\n                        onChange={handleChange}\r\n                        placeholder={'Search...'}\r\n                        readOnly={mode === 'TEST'}\r\n                        disabled={mode === 'TEST'}\r\n                        onFocus={handleFocus}\r\n                    >\r\n                        <FaSearch/>\r\n                    </InputWithButton>\r\n                </div>\r\n                \r\n            </div>  \r\n        )\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        mode : state.base.get('mode'),\r\n        isActiveMenu: state.base.get('isActiveMenu')\r\n    }),\r\n    (dispatch) => ({\r\n        BaseActions : bindActionCreators(baseActions, dispatch)\r\n    })\r\n) (HeaderContainer);","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\n\r\nimport Button from '../components/Button';\r\n\r\nimport * as baseActions from '../modules/base';\r\n\r\nimport {MdClose} from 'react-icons/md';\r\n\r\nimport classNames from 'classnames/bind';\r\nimport * as styles from '../style/layout.module.scss';\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nclass MenuContainer extends Component {\r\n\r\n    handleSwitchMenu = () => {\r\n        const {BaseActions} =this.props;\r\n        BaseActions.switchMenu();\r\n    }\r\n\r\n    handleSelectMenu = (e) => {\r\n        const {textContent} = e.target;\r\n        const {BaseActions} = this.props;\r\n\r\n        BaseActions.setMode(textContent);\r\n        BaseActions.switchMenu();\r\n    }\r\n    \r\n    render() {\r\n        const {isActiveMenu} = this.props;\r\n        const {handleSwitchMenu, handleSelectMenu} = this;\r\n        \r\n        const animetion = isActiveMenu ? 'open':'close';\r\n        return (\r\n            <div>\r\n            {\r\n                 (\r\n                    <div>\r\n                        <div className={cx('menuBase', 'wrapper-'+animetion)}\r\n                            onClick={handleSwitchMenu}\r\n                        >\r\n                        </div>\r\n                        <div className={cx('menuBar',animetion)}>\r\n                            <div className={cx('buttons')}>\r\n                                <Button\r\n                                    className={['fullButton','rotate']}\r\n                                    onClick={handleSwitchMenu}\r\n                                >\r\n                                    <MdClose/>\r\n                                </Button>\r\n                            </div>\r\n                            <div \r\n                                className={cx('menu')}\r\n                                onClick={handleSelectMenu}\r\n                                >\r\n                                WORDS\r\n                            </div>\r\n                            <div \r\n                                className={cx('menu')}\r\n                                onClick={handleSelectMenu}\r\n                                >\r\n                                TEST\r\n                            </div>\r\n                            <div\r\n                                className={cx('menu')}\r\n                                onClick={handleSelectMenu}\r\n                            >\r\n                                FILE FORM\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        isActiveMenu : state.base.get('isActiveMenu')\r\n    }),\r\n    (dispatch) => ({\r\n        BaseActions: bindActionCreators(baseActions, dispatch)\r\n    })\r\n) (MenuContainer);","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n//style\r\nimport styles from '../style/word.module.scss';\r\nimport classNames from 'classnames/bind';\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nclass Word extends Component {\r\n    static propTypes = {\r\n        word : PropTypes.string\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.ref = React.createRef();\r\n    }\r\n\r\n    componentDidMount(prevProps, prevState, snapshot) {\r\n        const current = this.ref.current;\r\n        \r\n        if (current.offsetWidth > current.parentElement.offsetWidth ) {\r\n            current.className = cx('overflowText');\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const { word,mode } = this.props;\r\n\r\n        return (\r\n            <div\r\n                className={cx( mode!=='TEST' ? 'word' : ['word','first'] )}\r\n            >\r\n                <div>\r\n                    <span\r\n                        ref={this.ref}\r\n                    >\r\n                        {word}\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Word;","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ImmutablePropTypes from 'react-immutable-proptypes';\r\n\r\n//style\r\nimport styles from '../style/word.module.scss';\r\nimport classNames from 'classnames/bind';\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nclass Means extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.ref = React.createRef();\r\n    }\r\n\r\n    componentDidMount(prevProps, prevState, snapshot) {\r\n        const current = this.ref.current;\r\n        if (current === null ) {\r\n            return;\r\n        }\r\n        if (current.offsetWidth > current.parentElement.offsetWidth ) {\r\n            current.className = cx('overflowText');\r\n        }\r\n\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const current = this.ref.current;\r\n        if (current === null ) {\r\n            return;\r\n        }\r\n        if (current.offsetWidth > current.parentElement.offsetWidth ) {\r\n            current.className = cx('overflowText');\r\n        }\r\n\r\n    }\r\n\r\n    static propTypes = {\r\n        means : ImmutablePropTypes.listOf(\r\n            PropTypes.string\r\n        ),\r\n        mode : PropTypes.string,\r\n        onBlur : PropTypes.func\r\n    }\r\n\r\n    render() {\r\n        const { means, mode, onBlur, onEdit } = this.props;\r\n        let contents;\r\n\r\n        if ( mode === 'TEST' ) {\r\n            contents = (\r\n                <input\r\n                    placeholder={'ex) Mean1, Mean2'}\r\n                    onBlur={onBlur}\r\n                />\r\n            )\r\n        } else {\r\n            contents = means.toJS()[0];\r\n            for ( let i=1; i<means.size; i++ ) {\r\n                contents += (\", \"+means.toJS()[i]);\r\n            }\r\n\r\n            contents = (\r\n                <div>\r\n                    <span\r\n                        ref={this.ref}\r\n                    >\r\n                        {contents}\r\n                    </span>\r\n                </div>\r\n            )\r\n        }\r\n        \r\n        return (\r\n            <div\r\n                onClick={onEdit}\r\n                className={cx('mean')}\r\n            >\r\n                {contents}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Means;","import React, {Component} from 'react';\r\n\r\nimport classNames from 'classnames/bind';\r\nimport wordStyle from '../style/word.module.scss';\r\n\r\nimport Button from './Button';\r\n\r\n//icons\r\nimport {IoMdVolumeHigh} from 'react-icons/io';\r\n\r\nconst cx = classNames.bind(wordStyle);\r\n\r\nclass Etc extends Component {\r\n    handleSound = (e) => {\r\n        e.stopPropagation();\r\n        const { word } = this.props;\r\n        let msg = new SpeechSynthesisUtterance(word);\r\n        msg.lang='en-us';\r\n        msg.volume=1;\r\n        msg.rate=1;\r\n        msg.pitch=1;\r\n        \r\n        speechSynthesis.speak(msg);\r\n    }\r\n    \r\n    render() {\r\n        const {handleSound} = this;\r\n        \r\n        return (\r\n            <div className={cx(['etc','last'])}>\r\n                <Button \r\n                    className={['wordContainerButton','pulse']} \r\n                    onClick={handleSound}\r\n                >\r\n                    <IoMdVolumeHigh />\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Etc;","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ImmutablePropTypes from 'react-immutable-proptypes';\r\nimport classNames from 'classnames/bind';\r\n\r\nimport styles from '../style/word.module.scss';\r\n\r\nimport Word from './Word';\r\nimport Means from './Means';\r\nimport Etc from './Etc';\r\n\r\nimport { FiSquare, FiCheckSquare} from 'react-icons/fi';\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nclass WordBox extends Component {\r\n    \r\n    static propTypes = {\r\n        word: ImmutablePropTypes.mapContains({\r\n            means : ImmutablePropTypes.listOf(\r\n                PropTypes.string\r\n            ),\r\n            id : PropTypes.string,\r\n            word : PropTypes.string,\r\n            mode : PropTypes.string\r\n        })\r\n        // mode : PropTypes.string,\r\n        // onCheck : PropTypes.func,\r\n        // onGiveUp : PropTypes.func\r\n    }\r\n\r\n    handleCheck = (e) => {\r\n        e.stopPropagation();\r\n\r\n    }\r\n\r\n    handleEdit = (e) => {\r\n        const {onEdit, word} = this.props;\r\n        onEdit(word.get('id'));\r\n    }\r\n\r\n    handleBlur = (e) => {\r\n        const {onBlur, word} = this.props;\r\n        const {value} = e.target;\r\n\r\n        onBlur(word.get('id'), value);\r\n        \r\n    }\r\n\r\n    render() {\r\n        const { word,mode, onRemove } = this.props;\r\n        const {handleEdit, handleCheck, handleBlur} = this;\r\n        return (\r\n            <div className={cx('container')}\r\n                key={word.get('id')}\r\n                onClick={ (mode!=='TEST') ? handleEdit:null}\r\n            >   \r\n                { (mode!=='TEST') && (\r\n                    <div\r\n                        className={cx(['check','first'])}\r\n                        >\r\n                        <input\r\n                            id={word.get('id')}\r\n                            onClick={handleCheck}\r\n                            type={'checkbox'}\r\n                            />\r\n                        <label \r\n                            onClick={handleCheck}\r\n                            htmlFor={word.get('id')}\r\n                        >\r\n                            <FiSquare/><FiCheckSquare/>\r\n                        </label>\r\n                    </div>\r\n                )}\r\n                <Word \r\n                    word={word.get('word')} \r\n                    mode={mode}\r\n                    />\r\n                <Means\r\n                    means={word.get('means')}\r\n                    mode={mode}\r\n                    onBlur={handleBlur}\r\n                />\r\n                <Etc\r\n                    id={word.get('id')}\r\n                    word={word.get('word')}\r\n                    onRemove={onRemove}\r\n                    isComplete={word.get('isComplete')}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WordBox;","import React, {Component} from 'react';\r\n\r\nimport WordBox from './WordBox';\r\n\r\nimport classNames from 'classnames/bind';\r\n\r\nimport * as styles from '../style/word.module.scss';\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nclass WordBoxList extends Component {\r\n\r\n    render() {\r\n        const { words, mode, onEdit, onRemove, keyword, onBlur,isAtive } = this.props;\r\n        const wordList = words\r\n                            .filter(\r\n                                word => word.get('means').filter( mean => mean.indexOf(keyword) !== -1 ).size > 0\r\n                                        || word.get('word').indexOf(keyword) !== -1\r\n                            )\r\n                            .map (\r\n                                word => \r\n                                    <WordBox\r\n                                        key={word.get('id')}\r\n                                        keyword={keyword}\r\n                                        word={word}\r\n                                        mode={mode}\r\n                                        onEdit={onEdit}\r\n                                        onRemove={onRemove}\r\n                                        onBlur={onBlur}\r\n                                    />\r\n                            )\r\n\r\n        return (\r\n            <div\r\n                className={ cx( isAtive?['wordList','open']:['wordList','close'] )}\r\n            >\r\n                {wordList}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default WordBoxList;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport {List} from 'immutable';\r\n\r\nimport * as wordsActions from '../modules/words';\r\nimport * as testActions from '../modules/test';\r\nimport * as modalActions from '../modules/modal';\r\nimport * as baseActions from '../modules/base';\r\n\r\nimport WordBoxList from '../components/WordBoxList';\r\nimport Word from '../class/Word';\r\n\r\nclass WordBoxListContainer extends Component {\r\n    \r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.words.toString() !== this.props.words.toString() ) {\r\n            localStorage.setItem('words', JSON.stringify(this.props.words));\r\n        }\r\n\r\n        if ( prevProps.mode !== 'TEST' && this.props.mode === 'TEST' ) {\r\n            const {TestActions, words} = this.props;\r\n            const testWords = List(words.toJS().map( word => new Word(word).toTest() ));\r\n\r\n            TestActions.initialize( testWords );\r\n        }\r\n    }\r\n\r\n    handleEdit = (id) => {\r\n        const {ModalActions, words} = this.props;\r\n        const index = words.findIndex( word => word.get('id') === id );\r\n        const word = new Word(words.get(index).toJS()).toModal();\r\n\r\n        ModalActions.show(word);\r\n    }\r\n\r\n    handleRemove = (id) => {\r\n        const {WordsActions} = this.props;\r\n\r\n        WordsActions.remove(id);\r\n    }\r\n\r\n    handleBlur = ( id, answer) => {\r\n        const {TestActions, testWords} = this.props;\r\n        const index = testWords.findIndex( word => word.get('id') === id );\r\n        const answers = answer.split(',').map( answer => answer.replace(/ /g,'') );\r\n\r\n        let isCorrect = false;\r\n\r\n        if ( testWords.getIn([index,'answers']).isEmpty() && answer === '' ) {\r\n            return;\r\n        }\r\n\r\n        if ( answers.length <= testWords.getIn([index,'means']).size ) {\r\n            isCorrect = List(answers).filter(\r\n                                answer => testWords.getIn([index,'means'])\r\n                                    .findIndex( mean => mean === answer ) < 0\r\n            ).size > 0 ? false : true;\r\n        }\r\n\r\n        TestActions.change({\r\n            index: index,\r\n            answers : List(answers),\r\n            isCorrect : isCorrect\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {words, keyword, mode} = this.props;\r\n        const {handleEdit, handleRemove, handleBlur} = this;\r\n\r\n        return (\r\n                <WordBoxList\r\n                    words={words}\r\n                    keyword={keyword}\r\n                    mode={mode}\r\n                    onEdit={handleEdit}\r\n                    onRemove={handleRemove}\r\n                    onBlur={handleBlur}\r\n                    isAtive={mode !== 'FILE FORM'}\r\n                />\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        keyword: state.base.get('keyword'),\r\n        words : state.words,\r\n        mode : state.base.get('mode'),\r\n        testWords : state.test.get('words')\r\n    }),\r\n    (dispatch) => ({\r\n        WordsActions: bindActionCreators(wordsActions, dispatch),\r\n        ModalActions: bindActionCreators(modalActions, dispatch),\r\n        BaseActions: bindActionCreators(baseActions, dispatch),\r\n        TestActions: bindActionCreators(testActions, dispatch)\r\n    })\r\n) (WordBoxListContainer);","import React, {Component} from 'react';\r\nimport {InputWithButton} from './Input';\r\n\r\nimport styles from '../style/modal.module.scss';\r\nimport classNames from 'classnames/bind';\r\n\r\nimport Button from './Button';\r\n\r\n//icon\r\nimport {MdDelete, MdEdit} from 'react-icons/md';\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\n\r\nclass Mean extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.ref = React.createRef();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.ref.current !== null) {\r\n            this.ref.current.focus();\r\n        }\r\n\r\n    }\r\n\r\n    handleMode = () => {\r\n        const {mean, toggleMode} = this.props;\r\n\r\n        toggleMode(mean.get('id'));\r\n    }\r\n\r\n    handleRemove = () => {\r\n        const {mean, onRemove} = this.props;\r\n        onRemove(mean.get('id'));\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const {value} = e.target;\r\n        const {mean, onChange} = this.props;\r\n        onChange(mean.get('id'), value);\r\n    }\r\n\r\n    render() {\r\n        const {mean} = this.props;\r\n        const {handleMode, handleRemove, handleChange} = this;\r\n        const element = mean.get('isEditMode') ?\r\n                        (\r\n                            <InputWithButton\r\n                                defaultValue={mean.get('mean')}\r\n                                buttonClassName={'innerButton-right'}\r\n                                onBlur={handleChange}\r\n                                ref={this.ref}\r\n                            >\r\n                                <MdEdit/>\r\n                            </InputWithButton>\r\n                        )\r\n                        :\r\n                        (   \r\n                            <div  className={cx('mean')}>\r\n                                <div className={cx('text')}>{mean.get('mean')}</div>\r\n                                <div \r\n                                    className={cx('button')}\r\n                                >\r\n                                    <Button\r\n                                        className={'button'}\r\n                                        onClick={handleMode}\r\n                                        >\r\n                                        <MdEdit/>\r\n                                    </Button>\r\n                                    <Button\r\n                                        className={'button'}\r\n                                        onClick={handleRemove}\r\n                                    >\r\n                                        <MdDelete/>\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n\r\n        return (\r\n            <div>\r\n                {element}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Mean;","import React, {Component} from 'react';\r\n\r\nimport styles from '../style/modal.module.scss';\r\nimport classNames from 'classnames/bind';\r\n\r\nimport Mean from './Mean';\r\n\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nclass MeanList extends Component {\r\n    \r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if (this.props.means.toString()\r\n                === nextProps.means.toString() ) {\r\n                    return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n    \r\n    handleBlur = (e) => {\r\n        const {value} = e.target;\r\n        const {onChangeMean, means } = this.props;\r\n        const findIndex = means.findIndex(mean => mean.get('mean').trim() === value.trim());\r\n        let mean = value;\r\n        onChangeMean( findIndex, mean );\r\n        \r\n    }\r\n    \r\n    handleKeyPress = (e) => {\r\n        if ( (e.keyCode === 13 || e.keyCode === 9 || e.key === 'Enter') && e.target.value !== '' ) {\r\n            e.target.blur();\r\n        }\r\n    }\r\n    \r\n    handleRemove = (e) => {\r\n        const { onRemoveMean } = this.props;\r\n        const index = e.target.closest('div').getAttribute('index');\r\n        \r\n        onRemoveMean(index);\r\n    }\r\n    \r\n    render() {\r\n        const { means, onRemove, toggleMode, onChange } = this.props;\r\n\r\n        const meanList = means.map( \r\n            mean => (\r\n                <Mean\r\n                    key={mean.get('id')}\r\n                    mean={mean}\r\n                    toggleMode={toggleMode}\r\n                    onChange={onChange}\r\n                    onRemove={onRemove}\r\n                />\r\n            )\r\n        );\r\n\r\n        return (\r\n            <div className={cx('meansList')}>\r\n                {meanList}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MeanList;","import React, {Component} from 'react';\r\n\r\nimport classNames from 'classnames/bind';\r\nimport styles from '../style/modal.module.scss';\r\n\r\nimport {InputWithButton} from './Input';\r\nimport MeanList from './MeanList';\r\n\r\nimport {MdAdd} from 'react-icons/md';\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nclass Modal extends Component {\r\n\r\n    handleBlur = ( e ) => {\r\n        const {onAddMean} = this.props;\r\n        const mean = e.target.value;\r\n\r\n        if (mean === '' || mean === null || typeof(mean) === 'undefined') {\r\n            return;\r\n        }\r\n        \r\n        e.target.value='';\r\n\r\n        onAddMean( mean );\r\n    }\r\n\r\n    handleKeyDown = (e) => {\r\n        if ( (e.keyCode === 13 || e.keyCode === 9) && e.target.value !== '' ) {\r\n            e.preventDefault();\r\n            e.target.blur();\r\n            e.target.focus();\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const {onChange} =this.props;\r\n        onChange(e.target.value);\r\n    }\r\n\r\n    render() {\r\n        const { handleBlur, handleChange, handleKeyDown } = this;\r\n        const {modal, toggleMeanMode, onChangeMean, onRemoveMean, onAdd, onCancel, mode} = this.props;\r\n\r\n        let modeString = 'Add';\r\n\r\n        if (mode === 'change') {\r\n            modeString = 'Edit';\r\n        }\r\n\r\n        return (\r\n            <div className={cx('wrapper')}>\r\n                <div className={cx('box')}>\r\n                    <div className={cx('title')}> \r\n                        <p>Word {modeString}</p>\r\n                    </div>\r\n                    <div className={cx('contents')}>\r\n                        <div>\r\n                            <input\r\n                                placeholder='Word'\r\n                                defaultValue={modal.getIn(['word','word'])}\r\n                                onChange={handleChange}\r\n                                required='required'\r\n                            />\r\n                            <MeanList\r\n                                means = {modal.getIn(['word', 'means'])}\r\n                                onChange = {onChangeMean}\r\n                                onRemove = {onRemoveMean}\r\n                                toggleMode = {toggleMeanMode}\r\n                            />\r\n                            <InputWithButton\r\n                                className={'inputWrapper'}\r\n                                buttonClassName={'innerButton-right'}\r\n                                placeholder='Mean'\r\n                                onBlur={handleBlur}\r\n                                onKeyDown={handleKeyDown}\r\n                            >\r\n                                <MdAdd/>\r\n                            </InputWithButton>\r\n                        </div>\r\n                    </div>\r\n                    <div \r\n                        className={cx('add')}\r\n                        onClick={onAdd}\r\n                    >\r\n                        <span>{modeString}</span>\r\n                    </div>\r\n                    <div \r\n                        className={cx('cancel')}\r\n                        onClick={onCancel}\r\n                    >\r\n                        <span>Cancel</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal;","import React, {Component} from 'react';\r\nimport classNames from 'classnames/bind';\r\n\r\nimport * as styles from '../style/modal.module.scss';\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nclass Result extends Component {\r\n\r\n    render () {\r\n        const {correct, wrong, resultVisible, onClick} = this.props;\r\n        return ( \r\n            <div\r\n                className={cx(resultVisible?['result','open-wrapper']:'result')}\r\n                onClick={onClick}\r\n            >   \r\n                <div className={cx(resultVisible?['correct','open']:['correct','close'])} >\r\n                        {correct}\r\n                </div>\r\n                <div className={cx(['total'])}>\r\n                        /{correct+wrong}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Result;","import React, {Component} from 'react';\r\nimport {Map} from 'immutable';\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport shortid from 'shortid';\r\n\r\nimport Word from '../class/Word';\r\n\r\nimport * as wordsActions from '../modules/words';\r\nimport * as modalActions from '../modules/modal';\r\n\r\nimport Modal from '../components/Modal'\r\nimport Result from '../components/Result'\r\n\r\nclass WordModalContainer extends Component {\r\n    handleMean = {\r\n\r\n        add : ( mean ) => {\r\n            const {ModalActions, modal } = this.props;\r\n            const index = modal.getIn( ['word', 'means'] ).findIndex( item => item.get('mean').replace(/ /g,'') === mean.replace(/ /g,'') );\r\n            // 입력한 뜻이 존재 하지 않을 경우\r\n            if (index < 0 ) {\r\n                const meanObj = Map({\r\n                    id : shortid.generate(),\r\n                    mean :mean,\r\n                    isEditMode : false\r\n                });\r\n                ModalActions.addMean( meanObj );\r\n            } else {\r\n                alert('it is duplicate');\r\n            }\r\n\r\n        },\r\n\r\n        remove : (id) => {\r\n            const { ModalActions, modal }= this.props;\r\n            const index = modal.getIn( ['word', 'means'] ).findIndex( mean => mean.get('id') === id);\r\n\r\n            if (index >= 0 ){\r\n                ModalActions.removeMean(index);\r\n            }\r\n            \r\n        },\r\n\r\n        change: (id, value)=> {\r\n            const { ModalActions, modal }= this.props;\r\n            const index = modal.getIn( ['word', 'means'] ).findIndex( mean => mean.get('id') === id );\r\n            const otherMeans = modal.getIn(['word', 'means']).delete(index);\r\n\r\n            let mean = value;\r\n\r\n            if ( otherMeans.findIndex( mean => mean.get('mean').replace(/ /g,'') === value.replace(/ /g,'') ) > -1 ) {\r\n                alert('it is duplicate');\r\n                mean = modal.getIn(['word', 'means', index, 'mean']);\r\n            }\r\n\r\n            if (value === '' ) {\r\n                if ( window.confirm(\"you didn't enter anything. do you want remove this?\") ) {\r\n                    ModalActions.removeMean(index);\r\n                }\r\n                return;\r\n            }\r\n\r\n            ModalActions.changeMean( {index, mean} );\r\n        },\r\n        \r\n        toggleMode: (id) => {\r\n            const {ModalActions, modal} = this.props;\r\n            const index = modal.getIn( ['word', 'means'] ).findIndex( mean => mean.get('id') === id);\r\n\r\n            ModalActions.toggleMeanMode(index);\r\n        }\r\n\r\n    }\r\n\r\n    handleWord = {\r\n        add: () => {\r\n            const {WordsActions, ModalActions, modal} = this.props;\r\n            const word = modal.getIn(['word', 'word']);\r\n            const means = modal.getIn(['word', 'means']);\r\n\r\n            let msg = 'Please enter this:';\r\n            let validate = true;\r\n            if (word === '' ) {\r\n                validate = false;\r\n                msg += '\\n-Word'; \r\n            } \r\n            \r\n            if ( means.isEmpty() ) {\r\n                validate = false;\r\n                msg += '\\n-Means';\r\n            }\r\n\r\n            if ( !validate ) {\r\n                window.alert(msg);\r\n                return;\r\n            }\r\n            \r\n            WordsActions.create( \r\n                new Word (\r\n                    {\r\n                        word:word,\r\n                        means:means,\r\n                        id:shortid.generate()\r\n                    }\r\n                ).fromModal().toImmutable()\r\n            );\r\n            ModalActions.hide();\r\n        },\r\n        change: () => {\r\n            const {WordsActions, ModalActions, modal} =this.props;\r\n\r\n            const word = modal.getIn(['word', 'word']);\r\n            const means = modal.getIn(['word', 'means']);\r\n\r\n            let msg = 'Please enter this:';\r\n            let validate = true;\r\n            if (word === '' ) {\r\n                validate = false;\r\n                msg += '\\n-Word'; \r\n            } \r\n            \r\n            if ( means.isEmpty() ) {\r\n                validate = false;\r\n                msg += '\\n-Means';\r\n            }\r\n\r\n            if ( !validate ) {\r\n                window.alert(msg);\r\n                return;\r\n            }\r\n\r\n            WordsActions.update(\r\n                new Word( \r\n                    modal.get('word')\r\n                ).fromModal()\r\n            );\r\n            ModalActions.hide();\r\n        }\r\n    }\r\n\r\n    handleCancel = () => {\r\n        const {ModalActions} = this.props;\r\n        ModalActions.hide();\r\n    }\r\n\r\n    handleChange = (word) => {\r\n        const {ModalActions} = this.props;\r\n\r\n        const input = {\r\n            word : word,\r\n            mean : ''\r\n        }\r\n\r\n        ModalActions.change(\r\n            input\r\n        );\r\n    }\r\n\r\n    handleClick =()=> {\r\n        const {ModalActions} = this.props;\r\n        ModalActions.hideResult();\r\n    }\r\n\r\n    render () {\r\n        const {handleMean, handleChange, handleWord, handleCancel} = this;\r\n        const {modal, wrong, correct} = this.props;\r\n        const {resultVisible} = this.props;\r\n        const {handleClick} = this;\r\n\r\n        return (\r\n            <div>\r\n                {\r\n                    modal.get('visible') && (\r\n                                    <Modal\r\n                                        modal={modal}\r\n                                        mode={modal.get('mode')}\r\n                                        onChange={handleChange}\r\n                                        toggleMeanMode={handleMean['toggleMode']}\r\n                                        onAddMean={handleMean['add']}\r\n                                        onChangeMean={handleMean['change']}\r\n                                        onRemoveMean={handleMean['remove']}\r\n                                        onAdd={handleWord[modal.get('mode')]}\r\n                                        onCancel={handleCancel}\r\n                                    />\r\n                    )\r\n                }\r\n                <Result\r\n                    wrong={wrong}\r\n                    correct={correct}\r\n                    resultVisible={resultVisible}\r\n                    onClick={handleClick}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        modal:state.modal,\r\n        wrong:state.test.get('wrong'),\r\n        correct:state.test.get('correct'),\r\n        resultVisible: state.modal.get('resultVisible')\r\n    }),\r\n    (dispatch) => ({\r\n        WordsActions: bindActionCreators(wordsActions, dispatch),\r\n        ModalActions : bindActionCreators(modalActions, dispatch)\r\n    })\r\n) (WordModalContainer);","import classNames from 'classnames/bind';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport FileForm from './components/FileForm';\nimport FooterContainer from './containers/FooterContainer';\n// containers\nimport HeaderContainer from './containers/HeaderContainer';\nimport MenuContainer from './containers/MenuContainer';\nimport WordBoxListContainer from './containers/WordBoxListContainer';\nimport WordModalContainer from './containers/WordModalContainer';\nimport * as wordsActions from './modules/words';\nimport * as layout from './style/layout.module.scss';\n\nconst cx = classNames.bind(layout);\n\nclass App extends Component {\n  componentDidMount() {\n    const words = localStorage.getItem('words');\n    if (words !== null && typeof words !== 'undefined') {\n      const { WordsActions } = this.props;\n      WordsActions.loadWords(JSON.parse(words));\n    }\n  }\n\n  render() {\n    const { mode } = this.props;\n    return (\n      <div className={cx('wrapper')}>\n        <HeaderContainer />\n\n        <div className={cx('body')}>\n          <WordBoxListContainer />\n          <FileForm mode={mode} />\n        </div>\n\n        <FooterContainer />\n\n        <MenuContainer />\n        <WordModalContainer />\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    mode: state.base.get('mode'),\n  }),\n  dispatch => ({\n    WordsActions: bindActionCreators(wordsActions, dispatch),\n  }),\n)(App);\n","import {combineReducers} from 'redux';\r\n\r\nimport words from './words';\r\nimport modal from './modal';\r\nimport base from './base';\r\nimport test from './test';\r\n\r\nexport default combineReducers({\r\n    words,modal,base,test\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { createStore } from 'redux';\nimport App from './App';\n\nimport reducers from './modules';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(\n  reducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}